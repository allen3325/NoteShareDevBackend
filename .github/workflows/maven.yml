# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches:
    - main
    - 'releases/**'
  pull_request:
    branches: 
    - main
    - 'releases/**'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'zulu'
        cache: maven
    - name: create-json
      id: create-json
      uses: jsdaniell/create-json@1.1.2
      with:
        name: "testingocr-331615-5004a2226dc5.json"
        json: ${{ secrets.OCR_JSON }}
        dir: "/"
    - run: git config --global user.email "00857146@email.ntou.edu.tw" && git config --global user.name "allen3325" && git add . && git add --force testingocr-331615-5004a2226dc5.json && git status && git commit -a -m "Deploy Google Vision API JSON created!"
    - run: pwd
    - run: export GOOGLE_APPLICATION_CREDENTIALS="/home/runner/work/NoteShareDevBackend/testingocr-331615-5004a2226dc5.json"
    - run: echo "$GOOGLE_APPLICATION_CREDENTIALS"
#    - run: mvn clean
#    - run: mvn install:install-file -Dfile=libs/better-jieba-1.0.0-SNAPSHOT.jar -DgroupId=org.manlier -DartifactId=better-jieba -Dversion=1.0.0-SNAPSHOT -Dpackaging=jar

#    - run: mvn test
#    - run: mkdir staging && cp target/*.jar staging
#    - uses: actions/upload-artifact@v3
#      with:
#        name: test
#        path: staging
#     - name: Build with Maven
#       run: mvn -B package --file pom.xml
